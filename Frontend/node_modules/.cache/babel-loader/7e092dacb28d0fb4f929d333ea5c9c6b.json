{"ast":null,"code":"var _jsxFileName = \"/Users/jugal/Documents/Root/University/Web Dev CS 5610/Project/Front-end/wbdv-sp20-flight-project-client-react/src/components/Currency/CurrencyComponent.js\";\nimport React, { Component } from 'react';\nimport { fetchProfile } from '../../services/services';\nimport HeaderComponent from '../Headers/HeaderComponent';\nimport { fetchCurrencyList, convertCurrency } from '../../services/services';\nexport default class CurrencyComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        email: '',\n        first: '',\n        last: '',\n        type: '',\n        ticketsBooked: []\n      },\n      login: false,\n      currenyList: [],\n      from: '',\n      to: '',\n      amount: 'none',\n      convertedCurrency: ''\n    };\n\n    this.convertButton = () => {\n      this.state.from === this.from.to ? alert(\"You have selected the same currency to convert.\") : convertCurrency(this.state.from, this.state.to, Number(this.state.amount)).then(respone => {\n        this.setState({\n          convertedCurrency: respone\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetchProfile().then(user => {\n      if (user) {\n        this.setState({\n          user: user,\n          login: true\n        });\n      }\n    });\n    fetchCurrencyList().then(list => {\n      this.setState({\n        currenyList: list\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(HeaderComponent, {\n      user: this.state.user,\n      login: this.state.login,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      onChange: e => this.setState({\n        amount: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        from: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, Object.entries(this.state.currenyList).map(([key, value]) => React.createElement(\"option\", {\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, key))), React.createElement(\"select\", {\n      onChange: e => this.setState({\n        to: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, Object.entries(this.state.currenyList).map(([key, value]) => React.createElement(\"option\", {\n      value: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, key))), React.createElement(\"input\", {\n      readOnly: true,\n      type: \"text\",\n      value: this.state.convertedCurrency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.convertButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Convert\"), React.createElement(\"h1\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \", this.state.convertedCurrency, \" \"));\n  }\n\n}","map":{"version":3,"sources":["/Users/jugal/Documents/Root/University/Web Dev CS 5610/Project/Front-end/wbdv-sp20-flight-project-client-react/src/components/Currency/CurrencyComponent.js"],"names":["React","Component","fetchProfile","HeaderComponent","fetchCurrencyList","convertCurrency","CurrencyComponent","constructor","props","state","user","email","first","last","type","ticketsBooked","login","currenyList","from","to","amount","convertedCurrency","convertButton","alert","Number","then","respone","setState","componentDidMount","list","render","history","e","target","value","Object","entries","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { fetchProfile } from '../../services/services';\nimport HeaderComponent from '../Headers/HeaderComponent';\nimport { fetchCurrencyList, convertCurrency } from '../../services/services';\n\nexport default class CurrencyComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tstate = {\n\t\tuser: {\n\t\t\temail: '',\n\t\t\tfirst: '',\n\t\t\tlast: '',\n\t\t\ttype: '',\n\t\t\tticketsBooked: []\n\t\t},\n\t\tlogin: false,\n\t\tcurrenyList: [],\n\t\tfrom: '',\n\t\tto: '',\n\t\tamount: 'none',\n\t\tconvertedCurrency: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tfetchProfile().then((user) => {\n\t\t\tif (user) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuser: user,\n\t\t\t\t\tlogin: true\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tfetchCurrencyList().then((list) => {\n\t\t\tthis.setState({ currenyList: list });\n\t\t});\n\t}\n\n\tconvertButton = () => {\n\n        this.state.from === this.from.to ? alert(\"You have selected the same currency to convert.\"):\n       \n\t\tconvertCurrency(this.state.from, this.state.to, Number(this.state.amount)).then((respone) =>{\n           \n\t\t\tthis.setState({ convertedCurrency: respone })}\n\t\t);\n\t};\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<HeaderComponent user={this.state.user} login={this.state.login} history={this.props.history} />\n\n\t\t\t\t<input type=\"number\" onChange={(e) => this.setState({ amount: e.target.value })} />\n\n\t\t\t\t<select onChange={(e) => this.setState({ from: e.target.value })}>\n\t\t\t\t\t{Object.entries(this.state.currenyList).map(([ key, value ]) => (\n\t\t\t\t\t\t<option value={key} >\n\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\n\t\t\t\t<select onChange={(e) => this.setState({ to: e.target.value })}>\n\t\t\t\t\t{Object.entries(this.state.currenyList).map(([ key, value ]) => (\n\t\t\t\t\t\t<option value={key}>\n\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\n\t\t\t\t<input readOnly type=\"text\" value={this.state.convertedCurrency} />\n\n\t\t\t\t<button className=\"btn btn-success\" onClick={this.convertButton}>\n\t\t\t\t\tConvert\n\t\t\t\t</button>\n\n                    <h1 className=\"text-white\"> {this.state.convertedCurrency} </h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}