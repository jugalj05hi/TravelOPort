{"ast":null,"code":"// export const server = 'https://webdev-backend-alpha1.herokuapp.com';\nexport const server = 'http://localhost:3001';\nexport const searchFlights = async (origin, destination, adults, date) => {\n  const response = await fetch(`${server}/api/flights/${origin}/${destination}/${adults}/${date}`);\n  return await response.json();\n};\nexport const registerUser = user => {\n  fetch(`${server}/api/user`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      \"content-type\": 'application/json'\n    },\n    credentials: \"include\"\n  }).then(response => {\n    return response.json();\n  });\n};\nexport const loginUser = async user => {\n  const response = await fetch(`${server}/api/login`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      \"content-type\": 'application/json'\n    },\n    credentials: \"include\"\n  });\n  let res = await response;\n\n  if (res.status === 404) {\n    return false;\n  } else {\n    return await res.json();\n  }\n};\nexport const fetchProfile = async () => {\n  const response = await fetch(`${server}/api/profile`, {\n    method: 'POST',\n    credentials: \"include\"\n  });\n  let profile = await response;\n\n  if (profile.ok) {\n    return await profile.json();\n  } else {\n    return false;\n  }\n};\nexport const logoutUser = async () => {\n  const response = await fetch(`${server}/api/logout`, {\n    method: 'POST',\n    credentials: \"include\"\n  });\n  return await response.json();\n};\nexport const bookTicket = async user => {\n  const response = await fetch(`${server}/api/user/${user._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(user),\n    headers: {\n      'content-type': 'application/json'\n    },\n    credentials: \"include\"\n  });\n  return await response.json();\n};\nexport const updateUser = async modifiedUser => {\n  const response = await fetch(`${server}/api/user/${modifiedUser._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(modifiedUser),\n    headers: {\n      'content-type': 'application/json'\n    },\n    credentials: \"include\"\n  });\n  return await response.json();\n};\nexport const deleteUser = async userId => {\n  const response = await fetch(`${server}/api/user/${userId}`, {\n    method: 'DELETE'\n  });\n  return await response.json();\n};\nexport const searchHotels = async location => {\n  const response = await fetch(`${server}/api/search/hotels/${location}`);\n  return await response.json();\n};\nexport const findAllUsers = async () => {\n  const response = await fetch(`${server}/api/users`);\n  return await response.json();\n};\nexport const fetchCurrencyList = async () => {\n  const response = await fetch(`${server}/api/currency/list`);\n  return await response.json();\n};\nexport const convertCurrency = async (from, to, amount) => {\n  console.log(\"In service\", from, to, amount);\n  const response = await fetch(`${server}/api/currency`, {\n    method: 'POST',\n    body: JSON.stringify({\n      from: from,\n      to: to,\n      amount: amount\n    }),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  return await response.json();\n};","map":{"version":3,"sources":["/Users/jugal/Documents/Root/University/Web Dev CS 5610/Project/Front-end/wbdv-sp20-flight-project-client-react/src/services/services.js"],"names":["server","searchFlights","origin","destination","adults","date","response","fetch","json","registerUser","user","method","body","JSON","stringify","headers","credentials","then","loginUser","res","status","fetchProfile","profile","ok","logoutUser","bookTicket","_id","updateUser","modifiedUser","deleteUser","userId","searchHotels","location","findAllUsers","fetchCurrencyList","convertCurrency","from","to","amount","console","log"],"mappings":"AAAA;AACA,OAAO,MAAMA,MAAM,GAAG,uBAAf;AAEP,OAAO,MAAMC,aAAa,GAAG,OAAOC,MAAP,EAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,IAApC,KAA6C;AACxE,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEP,MAAO,gBAAeE,MAAO,IAAGC,WAAY,IAAGC,MAAO,IAAGC,IAAK,EADzC,CAA5B;AAEA,SAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpCH,EAAAA,KAAK,CACA,GAAEP,MAAO,WADT,EACqB;AACpBW,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFc;AAGpBK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHW;AAMpBC,IAAAA,WAAW,EAAE;AANO,GADrB,CAAL,CAQOC,IARP,CAQYX,QAAQ,IAAI;AACtB,WAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMU,SAAS,GAAG,MAAOR,IAAP,IAAgB;AACvC,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEP,MAAO,YADc,EACD;AACrBW,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFe;AAGrBK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHY;AAMrBC,IAAAA,WAAW,EAAE;AANQ,GADC,CAA5B;AASA,MAAIG,GAAG,GAAI,MAAMb,QAAjB;;AACA,MAAGa,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AACpB,WAAO,KAAP;AACD,GAFD,MAEK;AACJ,WAAO,MAAMD,GAAG,CAACX,IAAJ,EAAb;AACA;AACF,CAhBM;AAkBP,OAAO,MAAMa,YAAY,GAAG,YAAY;AACtC,QAAMf,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEP,MAAO,cADc,EACC;AACvBW,IAAAA,MAAM,EAAE,MADe;AAEvBK,IAAAA,WAAW,EAAE;AAFU,GADD,CAA5B;AAKA,MAAIM,OAAO,GAAG,MAAMhB,QAApB;;AACA,MAAIgB,OAAO,CAACC,EAAZ,EAAgB;AACd,WAAO,MAAMD,OAAO,CAACd,IAAR,EAAb;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CAZM;AAcP,OAAO,MAAMgB,UAAU,GAAG,YAAY;AACpC,QAAMlB,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEP,MAAO,aADc,EACA;AACtBW,IAAAA,MAAM,EAAE,MADc;AAEtBK,IAAAA,WAAW,EAAE;AAFS,GADA,CAA5B;AAKA,SAAO,MAAMV,QAAQ,CAACE,IAAT,EAAb;AACD,CAPM;AASP,OAAO,MAAMiB,UAAU,GAAG,MAAOf,IAAP,IAAgB;AACxC,QAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,aAAYU,IAAI,CAACgB,GAAI,EAAhC,EAAmC;AAC7Df,IAAAA,MAAM,EAAE,KADqD;AAE7DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFuD;AAG7DK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHoD;AAM7DC,IAAAA,WAAW,EAAE;AANgD,GAAnC,CAA5B;AAQA,SAAO,MAAMV,QAAQ,CAACE,IAAT,EAAb;AACD,CAVM;AAYP,OAAO,MAAMmB,UAAU,GAAG,MAAOC,YAAP,IAAwB;AAChD,QAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,aAAY4B,YAAY,CAACF,GAAI,EAAxC,EAA2C;AACrEf,IAAAA,MAAM,EAAE,KAD6D;AAErEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAec,YAAf,CAF+D;AAGrEb,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAH4D;AAMrEC,IAAAA,WAAW,EAAE;AANwD,GAA3C,CAA5B;AAQA,SAAO,MAAMV,QAAQ,CAACE,IAAT,EAAb;AACD,CAVM;AAYP,OAAO,MAAMqB,UAAU,GAAG,MAAOC,MAAP,IAAkB;AAC1C,QAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,aAAY8B,MAAO,EAA9B,EAAiC;AAC3DnB,IAAAA,MAAM,EAAE;AADmD,GAAjC,CAA5B;AAGA,SAAO,MAAML,QAAQ,CAACE,IAAT,EAAb;AACD,CALM;AAOP,OAAO,MAAMuB,YAAY,GAAG,MAAOC,QAAP,IAAoB;AAC9C,QAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,sBAAqBgC,QAAS,EAAzC,CAA5B;AACA,SAAO,MAAM1B,QAAQ,CAACE,IAAT,EAAb;AACD,CAHM;AAKP,OAAO,MAAMyB,YAAY,GAAG,YAAY;AACtC,QAAM3B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,YAAX,CAA5B;AACA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AACD,CAHM;AAKP,OAAO,MAAM0B,iBAAiB,GAAG,YAAY;AAE3C,QAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,oBAAX,CAA5B;AACA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AAED,CALM;AAOP,OAAO,MAAM2B,eAAe,GAAG,OAAOC,IAAP,EAAaC,EAAb,EAAiBC,MAAjB,KAA4B;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,IAA1B,EAAgCC,EAAhC,EAAoCC,MAApC;AAEA,QAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,MAAO,eAAX,EAA2B;AACrDW,IAAAA,MAAM,EAAE,MAD6C;AAErDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBsB,MAAAA,IAAI,EAAEA,IADa;AAEnBC,MAAAA,EAAE,EAAEA,EAFe;AAGnBC,MAAAA,MAAM,EAAEA;AAHW,KAAf,CAF+C;AAOrDvB,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAP4C,GAA3B,CAA5B;AAYA,SAAO,MAAMT,QAAQ,CAACE,IAAT,EAAb;AACD,CAhBM","sourcesContent":["// export const server = 'https://webdev-backend-alpha1.herokuapp.com';\nexport const server = 'http://localhost:3001';\n\nexport const searchFlights = async (origin, destination, adults, date) => {\n  const response = await fetch(\n      `${server}/api/flights/${origin}/${destination}/${adults}/${date}`);\n  return await response.json()\n};\n\nexport const registerUser = (user) => {\n  fetch(\n      `${server}/api/user`, {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          \"content-type\": 'application/json'\n        },\n        credentials: \"include\"\n      }).then(response => {\n    return response.json()\n  })\n};\n\nexport const loginUser = async (user) => {\n  const response = await fetch(\n      `${server}/api/login`, {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          \"content-type\": 'application/json'\n        },\n        credentials: \"include\"\n      });\n  let res =  await response\n  if(res.status === 404){\n    return false\n  }else{\n   return await res.json()\n  }\n};\n\nexport const fetchProfile = async () => {\n  const response = await fetch(\n      `${server}/api/profile`, {\n        method: 'POST',\n        credentials: \"include\"\n      });\n  let profile = await response;\n  if (profile.ok) {\n    return await profile.json()\n  } else {\n    return false\n  }\n};\n\nexport const logoutUser = async () => {\n  const response = await fetch(\n      `${server}/api/logout`, {\n        method: 'POST',\n        credentials: \"include\"\n      });\n  return await response.json()\n};\n\nexport const bookTicket = async (user) => {\n  const response = await fetch(`${server}/api/user/${user._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(user),\n    headers: {\n      'content-type': 'application/json'\n    },\n    credentials: \"include\"\n  });\n  return await response.json()\n};\n\nexport const updateUser = async (modifiedUser) => {\n  const response = await fetch(`${server}/api/user/${modifiedUser._id}`, {\n    method: 'PUT',\n    body: JSON.stringify(modifiedUser),\n    headers: {\n      'content-type': 'application/json'\n    },\n    credentials: \"include\"\n  });\n  return await response.json()\n};\n\nexport const deleteUser = async (userId) => {\n  const response = await fetch(`${server}/api/user/${userId}`, {\n    method: 'DELETE'\n  });\n  return await response.json()\n};\n\nexport const searchHotels = async (location) => {\n  const response = await fetch(`${server}/api/search/hotels/${location}`);\n  return await response.json()\n};\n\nexport const findAllUsers = async () => {\n  const response = await fetch(`${server}/api/users`);\n  return await response.json()\n};\n\nexport const fetchCurrencyList = async () => {\n\n  const response = await fetch(`${server}/api/currency/list`);\n  return await response.json()\n\n}\n\nexport const convertCurrency = async (from, to, amount) => {\n  console.log(\"In service\", from, to, amount);\n\n  const response = await fetch(`${server}/api/currency`, {\n    method: 'POST',\n    body: JSON.stringify({\n      from: from,\n      to: to,\n      amount: amount\n    }),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n\n  return await response.json();\n}\n\n\n"]},"metadata":{},"sourceType":"module"}