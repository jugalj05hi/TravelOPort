{"ast":null,"code":"var _jsxFileName = \"/Users/jugal/Documents/Root/University/Web Dev CS 5610/Project/Front-end/wbdv-sp20-flight-project-client-react/src/components/Login/LoginModalContent.js\";\nimport React from \"react\";\nimport { loginUser } from \"../../services/services\";\nimport crypto from \"crypto-js\";\n\nclass LoginModalContent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      incorrectPassword: false,\n      allFields: false\n    };\n\n    this.login = e => {\n      e.preventDefault();\n\n      if (this.state.user.email && this.state.user.password) {\n        let encryptedPassword = crypto.AES.encrypt(JSON.stringify(this.state.user.password), 'DEFcon777').toString();\n        this.setState({\n          user: { ...this.state.user,\n            password: encryptedPassword\n          }\n        }, async () => {\n          const user = await loginUser(this.state.user);\n\n          if (user) {\n            this.setState({\n              incorrectPassword: false,\n              allFields: false\n            }, () => {\n              window.$('#loginModal').modal('toggle');\n              this.props.history.push('/user-dashboard');\n            });\n          } else {\n            this.setState({\n              incorrectPassword: true\n            });\n          }\n        });\n      } else {\n        this.setState({\n          allFields: true\n        }); //alert('All fields are required!')\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"wbdv-dtl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"col-sm-2 col-form-label text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Email \"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"loginUsername\",\n      type: \"email\",\n      placeholder: \"someone\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        user: { ...this.state.user,\n          email: e.target.value\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Password \"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"loginPassword\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        user: { ...this.state.user,\n          password: e.target.value\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), this.state.incorrectPassword && React.createElement(\"div\", {\n      className: \"form-group row pl-3 pr-3 pt-1 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 error pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Incorrect email or password!!\"))), this.state.allFields && React.createElement(\"div\", {\n      className: \"form-group row pl-3 pr-3 pt-1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12 error pt-2 pb-2 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"All fields are required!\"))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      formAction: \"\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Sign in\"))));\n  }\n\n}\n\nexport default LoginModalContent;","map":{"version":3,"sources":["/Users/jugal/Documents/Root/University/Web Dev CS 5610/Project/Front-end/wbdv-sp20-flight-project-client-react/src/components/Login/LoginModalContent.js"],"names":["React","loginUser","crypto","LoginModalContent","Component","state","user","email","password","incorrectPassword","allFields","login","e","preventDefault","encryptedPassword","AES","encrypt","JSON","stringify","toString","setState","window","$","modal","props","history","push","render","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {loginUser} from \"../../services/services\";\nimport crypto from \"crypto-js\";\n\nclass LoginModalContent extends React.Component {\n  state = {\n    user: {\n      email: \"\",\n      password: \"\"\n    },\n    incorrectPassword: false,\n    allFields: false\n  };\n\n  login = (e) => {\n    e.preventDefault();\n    if (this.state.user.email && this.state.user.password) {\n      let encryptedPassword = crypto.AES.encrypt(\n          JSON.stringify(this.state.user.password), 'DEFcon777').toString();\n      this.setState({\n        user: {\n          ...this.state.user,\n          password: encryptedPassword\n        }\n      }, async () => {\n        const user = await loginUser(this.state.user)\n        if (user) {\n          this.setState({\n            incorrectPassword: false,\n            allFields:false\n          },()=>{\n            window.$('#loginModal').modal('toggle');\n            this.props.history.push('/user-dashboard')\n          });\n        } else {\n          this.setState({\n            incorrectPassword: true\n          })\n        }\n      })\n    } else {\n      this.setState({\n        allFields: true\n      })\n      //alert('All fields are required!')\n    }\n  };\n\n  render() {\n    return (\n        <form className=\"wbdv-dtl\">\n          <div className=\"form-group row\">\n            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label text-left\">\n              Email </label>\n            <div className=\"col-sm-10\">\n              <input className=\"form-control\"\n                     id=\"loginUsername\"\n                     type=\"email\"\n                     placeholder=\"someone\"\n                     value={this.state.email}\n                     onChange={(e) =>\n                         this.setState({\n                           user: {\n                             ...this.state.user,\n                             email: e.target.value\n                           }\n                         })}\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\n              Password </label>\n            <div className=\"col-sm-10\">\n              <input type=\"password\"\n                     className=\"form-control\"\n                     id=\"loginPassword\"\n                     placeholder=\"password\"\n                     value={this.state.password}\n                     onChange={(e) =>\n                         this.setState({\n                           user: {\n                             ...this.state.user,\n                             password: e.target.value\n                           }\n                         })}\n              />\n            </div>\n          </div>\n\n          {this.state.incorrectPassword &&\n          <div className=\"form-group row pl-3 pr-3 pt-1 text-left\">\n            <div className=\"col-sm-12 error pt-2 pb-2\">\n              <span>Incorrect email or password!!</span>\n            </div>\n          </div>}\n\n          {this.state.allFields &&\n          <div className=\"form-group row pl-3 pr-3 pt-1 \">\n            <div className=\"col-sm-12 error pt-2 pb-2 text-left\">\n              <span>All fields are required!</span>\n            </div>\n          </div>}\n\n          <div className=\"form-group row\">\n            <div className=\"col-sm-12\">\n              <button\n                  className=\"btn btn-primary btn-block\"\n                  type=\"submit\"\n                  formAction=\"\"\n                  onClick={this.login}\n              >\n                Sign in\n              </button>\n              {/*<div className=\"row\">\n                <div className=\"col text-right\">\n                  <a href=\"#\">Forgot Password?</a>\n                </div>\n              </div>*/}\n            </div>\n          </div>\n        </form>\n    )\n  }\n}\n\nexport default LoginModalContent\n"]},"metadata":{},"sourceType":"module"}